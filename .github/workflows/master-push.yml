# paths:
#   - 'migrations/**'
#   - 'projects/server/**'
#   - 'projects/core/constants/**'
#   - 'projects/core/methods/**'
name: "Bump version"
on:
  push:
    branches:
      - main
concurrency: production
jobs:
  Patch:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      # Get last production tag
      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git tag --sort=committerdate | grep -E '[0-9]' | tail -1 | cut -b 2-7)
          echo "previousTag: $name"
          echo "::set-output name=name::$name"
          
      # Bump version/tag
      - name: Bump version/tag
        id: taggerFinal
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: "minor"
          RELEASE_BRANCHES: "main"
          PRERELEASE: true
          WITH_V: true

      # Changelog
      - name: Update CHANGELOG
        id: changelog
        # uses: Requarks/changelog-action@v1
        uses: sitepark-com/changelog-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ steps.taggerFinal.outputs.new_tag }}
          toTag: "v${{ steps.previousTag.outputs.name }}"
          writeToFile: true
      ##
      - name: Commit Changelog to repository
        uses: stefanzweifel/git-auto-commit-action@v4.13.0
        with:
          commit_message: 'docs(changelog): Update changelog [skip ci]'
          file_pattern: CHANGELOG.md

      # Version
      - name: Bump version file
        id: bump-tag-file
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "version.json"
          json: '{"version": "${{ steps.taggerFinal.outputs.new_tag }}" }'
          dir: "./"
      ##
      - name: Commit version to repository
        uses: stefanzweifel/git-auto-commit-action@v4.13.0
        with:
          commit_message: 'build(version): Bump version [skip ci]'
          file_pattern: version.json

      # Release
      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.taggerFinal.outputs.new_tag }}
          release_name: Release ${{ steps.taggerFinal.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changes }}
          
